services:
  fastapi:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+aiomysql://memo_user:phoenix@mariadb:3306/memo_app
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mariadb
      - redis
      - kafka
    volumes:
      - ./app:/code/app
    networks:
      - app-network

  mariadb:
    image: mariadb:10.11
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=memo_app
      - MYSQL_USER=memo_user
      - MYSQL_PASSWORD=phoenix
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - fastapi
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-sogangcomputerclub.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx-entrypoint.sh:/usr/local/bin/nginx-entrypoint.sh:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    entrypoint: ["/usr/local/bin/nginx-entrypoint.sh"]
    command: >
      /bin/sh -c "
        apk add --no-cache openssl &&
        mkdir -p /etc/letsencrypt/live/sogangcomputerclub.org &&
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/letsencrypt/live/sogangcomputerclub.org/privkey.pem -out /etc/letsencrypt/live/sogangcomputerclub.org/fullchain.pem -subj '/CN=sogangcomputerclub.org' &&
        nginx -g 'daemon off;'
      "
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - fastapi
      - frontend
    networks:
      - app-network

volumes:
  mariadb_data:
  redis_data:

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: docker1