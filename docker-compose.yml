services:
  fastapi:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-mysql+aiomysql://memo_user:phoenix@mariadb:3306/memo_app}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-kafka:9093}
    depends_on:
      - mariadb
      - redis
      - kafka
    volumes:
      - ./app:/code/app
    networks:
      - app-network

  mariadb:
    image: mariadb:10.11
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-phoenix}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-memo_app}
      - MYSQL_USER=${MYSQL_USER:-memo_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-phoenix}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-3000}
    depends_on:
      - fastapi
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-sogangcomputerclub.conf:/etc/nginx/conf.d/sogangcomputerclub.conf:ro
      - ./nginx.sh:/nginx.sh
      - certbot_certs:/etc/letsencrypt
    entrypoint: /bin/sh
    command: -c "/nginx.sh"
    depends_on:
      - fastapi
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - ./frontend/build:/var/www/html
      - ./certbot.sh:/certbot.sh
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /bin/sh
    command: -c "/certbot.sh"
    networks:
      - app-network
    depends_on:
      - nginx
    links:
      - nginx

volumes:
  mariadb_data:
  redis_data:
  certbot_certs:

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: docker1
